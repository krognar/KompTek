// Program to exercise all lexical entities.

FUNC main() {                   // FUNC, identifier (func. def.)
    VAR a, _a1, a_2, arr[10], i // VAR, identifier, comma operator
    PRINT "Hello, world!"       // PRINT keyword, string literal
	PRINT ""                    // Whitespace: line starts on a tab character
    PRINT "Hello, \"world\"!"   // String literal with escaped double quotes

    _a1 := 10                   // Assignment operator and number constant
    a_2 := 2

    a := _a1 + a_2              // Plus operator
    PRINT _a1, "+", a_2, "=", a

    a := _a1 - a_2              // Minus operator
    PRINT _a1, "-", a_2, "=", a

    a := _a1 + (-a_2)           // Parentheses, unary minus operator
    PRINT _a1, "+ (-", a_2, ") =", a

    a := _a1 * a_2              // Multiply operator
    PRINT _a1, "*", a_2, "=", a

    a := _a1 / a_2              // Divide operator
    PRINT _a1, "/", a_2, "=", a

    IF ( a ) THEN               // IF, THEN, FI, single statement
        PRINT a
    FI

    // This loop fills the array arr with the values of i^2
    i := 10
    WHILE ( i ) DO
    {
        i := i - 1
        arr[i] := i**2
    }
    DONE

    i := 10
    WHILE ( i ) DO
    {
        i := i - 1
        PRINT i, "^2 = ", arr[i]
    }
    DONE

    // This loop prints the integers 5 through 0, skipping 2
    WHILE ( a ) DO              // WHILE/DO/DONE, block statements
    {
        IF ( a - 3 ) THEN       // IF/THEN/ELSE/FI
            a := a - 1
        ELSE
        {
            a := a - 1
            PRINT "Skip..."
            CONTINUE            // CONTINUE
        }
        FI
        PRINT a
    }
    DONE

    RETURN 0                    // RETURN keyword and number constant
}

